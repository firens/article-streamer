
twitter {

  search {
    tagToTrack = "#Spark"
    tagToTrack = ${?TWITTER_TAG}

    minimumScore = 1

    relatedTags = ["#apache","#article","#bigdata","#cassandra","#conference","#datascience","#hadoop","#machinelearning"]
    articleCloseWords = ["article","articles","publish","published","read","reader","reading","readings"]
    articleRelatedWords = ["introducing","introduction","out"]
    subjectCloseWords = ["apache","apache spark","big data","data","hadoop","stream"]
    subjectRelatedWords = ["neo4j",
    "bug","bugs","graph","graphs","learn","learning","machine learning","maintenance","technology","relational","release",
    "experience","explore","integration","library","migrating","migration"]

    articleUnrelatedWords = ["game","games"]
    subjectUnrelatedWords = ["light","lighted","lighting","lights","lit"]
  }

  tweetsBatchSize = 100

  oauth {
    oauthConsumerKey = "XXX"
    oauthConsumerKey = ${?TW_CONS_KEY}

    oauthConsumerSecret = "XXX"
    oauthConsumerSecret = ${?TW_CONS_SEC}

    oauthAccessToken = "XXX"
    oauthAccessToken = ${?TW_ACC_TOKEN}

    oauthAccessTokenSecret = "XXX"
    oauthAccessTokenSecret = ${?TW_ACC_SEC}
  }
}

kafka {
  // Kafka brokers host1:port1,host2:port2
  brokers = "XXX"
  brokers = ${?KAFKA_BROKERS}

  topic = "k3g8-default"

  // Requires the SSL configuration to be configured in the 'security' object
  sslProtocol = true

  security {
    storeLocation = "./truststore"
    authority = ${KAFKA_CA}
    certificate = ${KAFKA_CERT}
    privateKey = ${KAFKA_PRIVATE_KEY}
  }
}

spark {
  streamingTimeout = 10000
}