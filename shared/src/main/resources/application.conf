
twitter {

  search {
    tagToTrack = "#Spark"
    tagToTrack = ${?TWITTER_TAG}

    minimumScore = 1

    relatedTags = ["#apache","#article","#bigdata","#cassandra","#conference","#datascience","#hadoop","#machinelearning"]
    articleCloseWords = ["article","articles","publish","published","read","reader","reading","readings"]
    articleRelatedWords = ["introducing","introduction","out"]
    subjectCloseWords = ["apache","apache spark","big data","data","hadoop","stream"]
    subjectRelatedWords = ["neo4j",
    "bug","bugs","graph","graphs","learn","learning","machine learning","maintenance","technology","relational","release",
    "experience","explore","integration","library","migrating","migration"]

    articleUnrelatedWords = ["game","games"]
    subjectUnrelatedWords = ["light","lighted","lighting","lights","lit"]
  }

  tweetsBatchSize = 100

  // List all Tweeter username whose tweets should be ignored (spam or unrelated for instance)
  ignoredAuthors = ["TammyAdvocare", "JavaBot_"]

  oauth {
    oauthConsumerKey = "XXX"
    oauthConsumerKey = ${?TW_CONS_KEY}

    oauthConsumerSecret = "XXX"
    oauthConsumerSecret = ${?TW_CONS_SEC}

    oauthAccessToken = "XXX"
    oauthAccessToken = ${?TW_ACC_TOKEN}

    oauthAccessTokenSecret = "XXX"
    oauthAccessTokenSecret = ${?TW_ACC_SEC}
  }
}

kafka {
  // Kafka brokers host1:port1,host2:port2
  brokers = "XXX"
  brokers = ${?KAFKA_BROKERS}

  topic-default = "k3g8-default"
  topic1 = "k3g8-shift-1"
  topic2 = "k3g8-shift-2"
  topic-articles = "articles"

  maxAttempts = 10

  // Requires the SSL configuration to be configured in the 'security' object
  sslProtocol = false

  security {
    storeLocation = "./truststore"

    authority = ""
    authority = ${?KAFKA_CA}

    certificate = ""
    certificate = ${?KAFKA_CERT}

    privateKey = ""
    privateKey = ${?KAFKA_PRIVATE_KEY}
  }
}

spark {
  streamingTimeout = 10000
}

mysql {

  jdbcUrl = "jdbc:mysql://IP:PORT/DATABASE_NAME"
  jdbcUrl = ${?MYSQL_JDBC_URL}

  user = "XXX"
  user = ${?MYSQL_USER}

  password = "XXX"
  password = ${?MYSQL_PSWD}

  // Class of the mysql driver
  driver = "com.mysql.jdbc.Driver"

}

redis {

  host: "localhost"
  host: ${?REDIS_HOST}

  port: 6379
  port: ${?REDIS_PORT}

  // Time before a record expire in Seconds. Default is 31 days.
  expiryTime: 2678000
  port: ${?REDIS_EXPIRE}

}